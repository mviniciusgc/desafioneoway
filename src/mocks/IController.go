// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// IController is an autogenerated mock type for the IController type
type IController struct {
	mock.Mock
}

// Handle provides a mock function with given fields: file, lengthBatch
func (_m *IController) Handle(file io.Reader, lengthBatch int) error {
	ret := _m.Called(file, lengthBatch)

	var r0 error
	if rf, ok := ret.Get(0).(func(io.Reader, int) error); ok {
		r0 = rf(file, lengthBatch)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIController creates a new instance of IController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIController(t interface {
	mock.TestingT
	Cleanup(func())
}) *IController {
	mock := &IController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
