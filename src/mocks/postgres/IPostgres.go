// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	entity "github.com/mviniciusgc/desafio_neoway/src/entity"
	mock "github.com/stretchr/testify/mock"
)

// IPostgres is an autogenerated mock type for the IPostgres type
type IPostgres struct {
	mock.Mock
}

// Prepare provides a mock function with given fields: lineFile
func (_m *IPostgres) Prepare(lineFile []entity.Purchase) (*int64, error) {
	ret := _m.Called(lineFile)

	var r0 *int64
	var r1 error
	if rf, ok := ret.Get(0).(func([]entity.Purchase) (*int64, error)); ok {
		return rf(lineFile)
	}
	if rf, ok := ret.Get(0).(func([]entity.Purchase) *int64); ok {
		r0 = rf(lineFile)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*int64)
		}
	}

	if rf, ok := ret.Get(1).(func([]entity.Purchase) error); ok {
		r1 = rf(lineFile)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIPostgres creates a new instance of IPostgres. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIPostgres(t interface {
	mock.TestingT
	Cleanup(func())
}) *IPostgres {
	mock := &IPostgres{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
